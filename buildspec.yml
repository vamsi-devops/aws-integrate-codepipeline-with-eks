version: 0.2


phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email) 
      - mvn clean install
      - aws s3 cp /root/.m2/repository/com/vamsi/vamsiLogin/1.0/vamsiLogin-1.0.war s3://ecrwar
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t babu:latest .
      - docker tag babu:latest 899488875890.dkr.ecr.ap-south-1.amazonaws.com/aws-ecr:latest
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push 899488875890.dkr.ecr.ap-south-1.amazonaws.com/aws-ecr:latest
      - ssh -i aws.pem ssh@13.234.18.69 'sudo yum -y update' '
      - chmod +x aws.pem
      - ssh -i "aws.pem" ec2-user@ec2-13-234-18-69.ap-south-1.compute.amazonaws.com 'sudo yum update -y'
      - ssh -i "aws.pem" ec2-user@ec2-13-234-18-69.ap-south-1.compute.amazonaws.com 'docker pull 899488875890.dkr.ecr.ap-south-1.amazonaws.com/aws-ecr:latest'
      - echo Writing image definitions file...
      - aws eks create-cluster --name prod --role-arn arn:aws:iam::899488875890:role/EKS_MASTER_ROLE --resources-vpc-config subnetIds=subnet-e4952ea8,subnet-a2c389ca,subnet-8205ebf9
      - printf '[{"name":"nodeapp","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - cat imagedefinitions.json 
artifacts:
    files: imagedefinitions.json
